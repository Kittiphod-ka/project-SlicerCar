// server.js
const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const connectDB = require('./config/db');
const authRoutes = require('./routes/auth');
const userRoutes = require("./routes/user");
const bookingRoutes = require('./routes/booking');
const paymentRoutes = require('./routes/paymentRoutes');
const stripeWebhook = require('./webhooks/stripeWebhook');
const driverRoutes = require("./routes/driver");
const slideCarRoutes = require("./routes/slideCar");
const path = require("path");
const router = express.Router();

const dotenv = require('dotenv');

dotenv.config();

const app = express();

// ‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ MongoDB
connectDB();

// Middleware
app.use(cors());
app.use(bodyParser.json());

// Routes
app.use('/api/auth', authRoutes);
app.use('/api/profile', userRoutes);
console.log('Routes loaded successfully');
app.use('/api/users', userRoutes); // ‡πÉ‡∏ä‡πâ userRoutes ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
app.use('/api/bookings', bookingRoutes);
app.use('/api/payment', paymentRoutes);
app.use('/api/stripe', stripeWebhook);
app.use("/api", require("./routes/driver")); // ‚úÖ ‡πÉ‡∏´‡πâ‡πÅ‡∏ô‡πà‡πÉ‡∏à‡∏ß‡πà‡∏≤‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏° `/routes/driver.js`
app.use("/api/drivers", driverRoutes);
app.use("/api/slidecars", slideCarRoutes);
console.log("‚úÖ SlideCar Routes Loaded");  // ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Route ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏ñ‡∏™‡πÑ‡∏•‡∏î‡πå

const adminRoutes = require("./routes/admin"); // ‚úÖ ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ
app.use("/api/admin", adminRoutes);


// Root route
app.get('/', (req, res) => {
  res.send('API is running');
});

// Start server
const PORT = process.env.PORT || 5000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});


// ‚úÖ ‡πÉ‡∏´‡πâ Express ‡πÉ‡∏´‡πâ‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå public
app.use(express.static(path.join(__dirname, "public")));

// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Route ‡πÉ‡∏´‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á `payment-success.html`
app.get("/payment-success", (req, res) => {
  res.sendFile(path.join(__dirname, "public", "payment-success.html"));
});





router.get("/payment-success", (req, res) => {
  const bookingId = req.query.bookingId;

  if (!bookingId) {
    console.error("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Booking ID ‡πÉ‡∏ô URL");
    return res.status(400).send("‚ùå ‡πÑ‡∏°‡πà‡∏û‡∏ö Booking ID");
  }

  // ‚úÖ ‡πÉ‡∏ä‡πâ Deep Linking ‡∏Å‡∏•‡∏±‡∏ö‡πÄ‡∏Ç‡πâ‡∏≤‡πÅ‡∏≠‡∏õ
  const deepLink = `myapp://payment-success?bookingId=${bookingId}`;
  console.log(`üì¢ Redirecting to: ${deepLink}`);

  res.send(`
    <html>
      <head>
        <meta http-equiv="refresh" content="0;url=${deepLink}" />
      </head>
      <body>
        <p>‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÄ‡∏õ‡∏¥‡∏î‡πÅ‡∏≠‡∏õ...</p>
        <script>
          window.location.href = "${deepLink}";
        </script>
      </body>
    </html>
  `);
});

// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Route ‡∏Ç‡∏≠‡∏á Orders
const orderRoutes = require("./routes/orders");
app.use("/api/orders", orderRoutes); // üõ†Ô∏è ‡πÉ‡∏ä‡πâ API `/api/orders/:user_id`

// ‚úÖ ‡πÄ‡∏û‡∏¥‡πà‡∏° Route ‡∏Ç‡∏≠‡∏á booking-images
const bookingImageRoutes = require("./routes/bookingImageRoutes");
app.use("/api/booking-images", bookingImageRoutes);
app.use("/uploads", express.static(path.join(__dirname, "uploads"))); 

app.use("/uploads", express.static(path.join(__dirname, "uploads"), {
  setHeaders: (res, path, stat) => {
    res.set("Access-Control-Allow-Origin", "*"); // ‚úÖ ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ React Native ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
    res.set("Content-Type", "image/jpeg"); // ‚úÖ ‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡πÑ‡∏ü‡∏•‡πå
  }
}));



module.exports = router;

