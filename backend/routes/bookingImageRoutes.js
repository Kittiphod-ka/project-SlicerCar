const express = require("express");
const multer = require("multer");
const path = require("path");
const BookingImage = require("../models/BookingImage");

const router = express.Router();

// üìå ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå uploads/
const storage = multer.diskStorage({
  destination: (req, file, cb) => {
    cb(null, "uploads/"); // ‡∏£‡∏π‡∏õ‡∏à‡∏∞‡∏ñ‡∏π‡∏Å‡πÄ‡∏Å‡πá‡∏ö‡∏ó‡∏µ‡πà /uploads
  },
  filename: (req, file, cb) => {
    cb(null, `${req.body.bookingId}-${Date.now()}${path.extname(file.originalname)}`);
  },
});
const upload = multer({ storage });

// üìå API ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏£‡∏π‡∏õ
router.post("/upload", upload.single("image"), async (req, res) => {
  try {
    const { bookingId } = req.body;
    if (!bookingId) return res.status(400).json({ message: "bookingId is required" });

    const imageUrl = `/uploads/${req.file.filename}`;

    const newImage = new BookingImage({ bookingId, imageUrl });
    await newImage.save();

    res.status(201).json({ message: "üì∏ ‡∏£‡∏π‡∏õ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à", imageUrl });
  } catch (error) {
    console.error("‚ùå Error uploading image:", error);
    res.status(500).json({ message: "‚ùå Server Error" });
  }
});

// üìå API ‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏Ç‡∏≠‡∏á `bookingId`
router.get("/:bookingId", async (req, res) => {
  try {
    const images = await BookingImage.find({ bookingId: req.params.bookingId });
    res.json(images);
  } catch (error) {
    console.error("‚ùå Error fetching images:", error);
    res.status(500).json({ message: "‚ùå Server Error" });
  }
});

module.exports = router;
